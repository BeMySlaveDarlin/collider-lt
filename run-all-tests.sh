#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ k6
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./run-all-tests.sh [base_url]

set -e

BASE_URL=${1:-"http://localhost"}
RESULTS_DIR="results"
TIMESTAMP=$(date +%Y%m%d-%H%M%S)

echo "üöÄ –ó–∞–ø—É—Å–∫ –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Collider"
echo "üåê Base URL: $BASE_URL"
echo "üìÅ Results dir: $RESULTS_DIR"
echo "üïê Timestamp: $TIMESTAMP"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
mkdir -p $RESULTS_DIR

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
if ! curl -sf "$BASE_URL" > /dev/null; then
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É $BASE_URL"
    exit 1
fi
echo "‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"

# –°–æ–∑–¥–∞–µ–º CSV —Ñ–∞–π–ª—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
echo "üìã –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
mkdir -p data

if [ ! -f "data/users.csv" ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ data/users.csv..."
    echo "id,name,email" > data/users.csv
    for i in {1..1000}; do
        echo "$i,User_${i},user${i}@example.com" >> data/users.csv
    done
fi

if [ ! -f "data/event_types.csv" ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ data/event_types.csv..."
    echo "id,name,description" > data/event_types.csv
    types=("click" "page_view" "scroll" "hover" "form_submit" "download" "search" "login" "logout" "purchase")
    for i in {1..100}; do
        if [ $i -le 10 ]; then
            type_name=${types[$((i-1))]}
            echo "$i,$type_name,${type_name} event description" >> data/event_types.csv
        else
            echo "$i,event_type_${i},Auto-generated event type ${i}" >> data/event_types.csv
        fi
    done
fi

echo "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞
run_test() {
    local test_name=$1
    local test_file=$2
    local description=$3

    echo ""
    echo "üìä [$test_name] $description"
    echo "‚è≥ –ó–∞–ø—É—Å–∫: $test_file"

    if k6 run \
        --env BASE_URL="$BASE_URL" \
        --out json="$RESULTS_DIR/${test_name}-${TIMESTAMP}.json" \
        "$test_file"; then
        echo "‚úÖ [$test_name] –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå [$test_name] –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏"
    fi
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —Å—Ü–µ–Ω–∞—Ä–∏—è–º (–ë–ï–ó DELETE)
run_test "create" "tests/scenario-load-create.js" "Load test: Create (RPS) - Target: 3000+"

sleep 10

run_test "read" "tests/scenario-load-read.js" "Load test: Read (RPS) - Target: 4000+"

sleep 10

run_test "create-read" "tests/scenario-create-read.js" "Load test: Create/Read (RPS) - —Å–º–µ—à–∞–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞"

sleep 10

run_test "stats-cache" "tests/scenario-stats-cache.js" "Load test: Stats —Å –∫–µ—à–µ–º –∏ –±–µ–∑ –∫–µ—à–∞"

sleep 10

run_test "score" "tests/scenario-score.js" "Load test (score) - –æ–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"

echo ""
echo "üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $RESULTS_DIR"

# –°–æ–∑–¥–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo ""
echo "üìà –°–æ–∑–¥–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞..."

cat > "$RESULTS_DIR/summary-${TIMESTAMP}.md" << EOF
# –û—Ç—á–µ—Ç –ø–æ –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é Collider

**–î–∞—Ç–∞:** $(date)
**–°–µ—Ä–≤–µ—Ä:** $BASE_URL
**Timestamp:** $TIMESTAMP

## –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–µ—Å—Ç–∞—Ö

### ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- **DELETE /events** - —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∫–µ—à, —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è –ò–ó–û–õ–ò–†–û–í–ê–ù–ù–û
- **GET /users/{id}/events** - –ª–∏–º–∏—Ç –≤—Å–µ–≥–¥–∞ 1000
- **GET /stats** - –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã —Å –∫–µ—à–µ–º –∏ –±–µ–∑ –∫–µ—à–∞
- **–î–∞–Ω–Ω—ã–µ –∏–∑ CSV** - users.csv –∏ event_types.csv

### üß™ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã:

1. **Load test: Create (RPS)** - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
2. **Load test: Read (RPS)** - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á—Ç–µ–Ω–∏—è —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º (–±–µ–∑ POST)
3. **Load test: Delete (RPS)** - –ò–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
4. **Load test: Create/Read (RPS)** - –°–º–µ—à–∞–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ (–±–µ–∑ DELETE)
5. **Load test: Stats Cache** - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ—à–∞ –¥–ª—è /stats
6. **Load test (score)** - –°–∫–æ—Ä–∏–Ω–≥–æ–≤—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

## –§–∞–π–ª—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

EOF

ls -la "$RESULTS_DIR"/*-${TIMESTAMP}.json 2>/dev/null | while read line; do
    filename=$(basename "$line")
    echo "- \`$filename\`" >> "$RESULTS_DIR/summary-${TIMESTAMP}.md"
done

echo ""
echo "üìÑ –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç: $RESULTS_DIR/summary-${TIMESTAMP}.md"
echo ""
echo "üîß –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "   cat $RESULTS_DIR/create-${TIMESTAMP}.json | jq '.metrics.http_reqs.values.rate'"
echo "   cat $RESULTS_DIR/stats-cache-${TIMESTAMP}.json | jq '.scores // .metrics'"
echo ""
echo "üìä –ö–ª—é—á–µ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
echo "   ‚Ä¢ DELETE —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏"
echo "   ‚Ä¢ GET /stats —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–µ—à–∞ –∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ POST"
echo "   ‚Ä¢ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ CSV —Ñ–∞–π–ª–æ–≤"
echo "   ‚Ä¢ –í—Å–µ user_events –∑–∞–ø—Ä–æ—Å—ã —Å limit=1000"
echo ""
echo "‚ú® –ì–æ—Ç–æ–≤–æ!"#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ k6
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./run-all-tests.sh [base_url]

set -e

BASE_URL=${1:-"http://localhost"}
RESULTS_DIR="results"
TIMESTAMP=$(date +%Y%m%d-%H%M%S)

echo "üöÄ –ó–∞–ø—É—Å–∫ –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Collider"
echo "üåê Base URL: $BASE_URL"
echo "üìÅ Results dir: $RESULTS_DIR"
echo "üïê Timestamp: $TIMESTAMP"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
mkdir -p $RESULTS_DIR

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
if ! curl -sf "$BASE_URL" > /dev/null; then
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É $BASE_URL"
    exit 1
fi
echo "‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞
run_test() {
    local test_name=$1
    local test_file=$2
    local description=$3

    echo ""
    echo "üìä [$test_name] $description"
    echo "‚è≥ –ó–∞–ø—É—Å–∫: $test_file"

    if k6 run \
        --env BASE_URL="$BASE_URL" \
        --out json="$RESULTS_DIR/${test_name}-${TIMESTAMP}.json" \
        "$test_file"; then
        echo "‚úÖ [$test_name] –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå [$test_name] –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏"
    fi
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–æ —Å—Ü–µ–Ω–∞—Ä–∏—è–º
run_test "create" "tests/scenario-load-create.js" "Load test: Create (RPS)"

sleep 10

run_test "read" "tests/scenario-load-read.js" "Load test: Read (RPS)"

sleep 10

run_test "delete" "tests/scenario-load-delete.js" "Load test: Delete (RPS)"

sleep 10

run_test "create-read" "tests/scenario-create-read.js" "Load test: Create/Read (RPS)"

sleep 10

run_test "full-load" "tests/scenario-full-load.js" "Load test: Delete/Create/Read (RPS)"

sleep 10

run_test "score" "tests/scenario-score.js" "Load test (score)"

echo ""
echo "üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $RESULTS_DIR"

# –°–æ–∑–¥–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo ""
echo "üìà –°–æ–∑–¥–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞..."

cat > "$RESULTS_DIR/summary-${TIMESTAMP}.md" << EOF
# –û—Ç—á–µ—Ç –ø–æ –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é

**–î–∞—Ç–∞:** $(date)
**–°–µ—Ä–≤–µ—Ä:** $BASE_URL
**Timestamp:** $TIMESTAMP

## –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã

1. **Load test: Create (RPS)** - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
2. **Load test: Read (RPS)** - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
3. **Load test: Delete (RPS)** - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
4. **Load test: Create/Read (RPS)** - –°–º–µ—à–∞–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ —Å–æ–∑–¥–∞–Ω–∏–µ/—á—Ç–µ–Ω–∏–µ
5. **Load test: Delete/Create/Read (RPS)** - –ü–æ–ª–Ω–∞—è —Å–º–µ—à–∞–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞
6. **Load test (score)** - –°–∫–æ—Ä–∏–Ω–≥–æ–≤—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

## –§–∞–π–ª—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

EOF

ls -la "$RESULTS_DIR"/*-${TIMESTAMP}.json | while read line; do
    filename=$(basename "$line")
    echo "- \`$filename\`" >> "$RESULTS_DIR/summary-${TIMESTAMP}.md"
done

echo ""
echo "üìÑ –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç: $RESULTS_DIR/summary-${TIMESTAMP}.md"
echo ""
echo "üîß –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "   cat $RESULTS_DIR/create-${TIMESTAMP}.json | jq '.metrics.http_reqs.values.rate'"
echo "   cat $RESULTS_DIR/score-${TIMESTAMP}.json | jq '.scores'"
echo ""
echo "‚ú® –ì–æ—Ç–æ–≤–æ!"
